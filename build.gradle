plugins {
    id "java"
    id "maven-publish"
    id "idea"
    id "eclipse"
    id "net.minecraftforge.gradle" version "6.10.+"
    id "wtf.gofancy.fancygradle" version "1.1.+"
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.8"
    id "net.kyori.blossom" version "2.1.0"
}
version = "${minecraft_version}-${mod_version}"
group = mod_base_package
archivesBaseName = mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

fancyGradle {
    patches {
        resources
    }
}

minecraft {

    mappings channel: mappings_channel, version: mappings_version

    legacy {
        fixClasspath = true
        extractMappings = true
        attachMappings = true
    }

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'fml.coreMods.load', 'lain.mods.skins.init.forge.asm.Plugin'
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'fml.coreMods.load', 'lain.mods.skins.init.forge.asm.Plugin'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/generated/resources'
        }
        blossom {
            resources {
                property("mod_id", mod_id)
                property("mod_name", mod_name)
                property("mod_description", mod_description)
                property("mod_version", mod_version)
                property("mod_authors", mod_authors)
            }
            javaSources {
                property("MODNAME", mod_name)
                property("MODID", mod_id)
                property("VERSION", version)
            }
        }
    }
}

repositories {
    maven {
        name 'Cleanroom Maven'
        url 'https://maven.cleanroommc.com/'
    }
    maven {
        url "https://repo.cleanroommc.com/snapshots"
    }
    maven {
        url "https://maven.outlands.top/releases/"
    }
    mavenCentral()
}

dependencies {
    minecraft "com.cleanroommc:cleanroom:${cleanroom_version}"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes([
                'Specification-Title': mod_id,
                'Specification-Vendor': mod_authors,
                'Specification-Version': '1',
                'FMLCorePluginContainsFMLMod': true,
                'FMLCorePlugin': 'lain.mods.skins.init.forge.asm.Plugin',
                'Implementation-Title': project.name,
                'Implementation-Version': mod_version,
                'Implementation-Vendor': mod_authors,
                'ModType': 'CRL',
                'Implementation-Timestamp': new Date().format('yyyy-MM-dd\'T\'HH:mm:ssZ')
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
